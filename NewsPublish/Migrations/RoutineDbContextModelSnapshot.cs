// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsPublish.Database.Data;

namespace NewsPublish.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    partial class RoutineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverPic")
                        .HasColumnType("TEXT")
                        .HasMaxLength(300);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("States")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca88d765-8c17-4378-bd42-6146aec1a9ca"),
                            CategoryId = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Content = "根据外媒macrumors消息，DigiTimes最近的一份报告显示苹果希望在未来几年内将环境光传感器集成到新型的AirPods中。",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/5/20200525_202833_144.png",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(3070),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(3430),
                            States = true,
                            Title = "DigiTimes：苹果未来 AirPods 将搭载“环境光传感器”",
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            CategoryId = new Guid("42a2bae9-09c2-47ae-94de-3912debff652"),
                            Content = "一直以来，华为公司就像美国政府的“眼中钉”，不断遭美制裁。近两年，美国政府对华为的制裁愈演愈烈，甚至让其对外发声时只能苛求“活下来”。",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/2/20200214_090339_584.jpg",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4140),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4150),
                            States = true,
                            Title = "华为“去美国化”的成功几率有多大？”",
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("84e6a64f-53c8-4b30-8735-eabc6d48a549"),
                            CategoryId = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Content = "两会期间，董明珠在接受采访时表示：“六稳”“六保”首先就是稳企业、保居民就业。企业的生命力体现在遭遇不可抗力时的风险防控能力，这个时候还能呵护我的员工，让他们在这很安全，我们就要做这种风险防控，今年一下真的给兑现了。",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/5/20200525_191650_79.png",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4170),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4180),
                            States = false,
                            Title = "董明珠称坚决不裁员：员工少1000块钱能活，没工作很难活下去",
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("11d67370-955b-4976-9285-834721ca57a5"),
                            CategoryId = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Content = "新华社银川6月10日电 中共中央总书记、国家主席、中央军委主席习近平近日在宁夏考察时强调，要全面落实党中央决策部署，坚持稳中求进工作总基调，坚持新发展理念，落实全国“两会”工作部署，坚决打好三大攻坚战，扎实做好“六稳”工作，全面落实“六保”任务，努力克服新冠肺炎疫情带来的不利影响，优先稳就业保民生，决胜全面建成小康社会，决战脱贫攻坚，继续建设经济繁荣、民族团结、环境优美、人民富裕的美丽新宁夏。",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/5/20200525102542_7599.jpg",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4180),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4180),
                            States = false,
                            Title = "习近平在宁夏考察时强调 决胜全面建成小康社会决战脱贫攻坚 继续建设经济繁荣民族团结环境优美人民富裕的美丽新宁夏”",
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("30c1f151-b97f-46b0-8d1f-e327051b67c8"),
                            CategoryId = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Content = "今天，天猫618正式启动。据天猫官方数据显示，第1小时预售成交额同比增长515 %！",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/5/20200525102542_7599.jpg",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4190),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4190),
                            States = true,
                            Title = "史上最大规模！天猫618今日正式启动”",
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("0a0e5629-cf5d-438f-abd2-bf6918d232a9"),
                            CategoryId = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Content = "小米全面屏电视Pro 32英寸新品发布，5月25日全渠道开售!",
                            CoverPic = "https://img.ithome.com/newsuploadfiles/2020/5/20200525_120326_295.jpg",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4200),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(4200),
                            States = true,
                            Title = "小米全面屏电视 Pro 32 英寸新品发布，售价 899 元”",
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.ArticleTag", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("ArticleId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ArticleTags");

                    b.HasData(
                        new
                        {
                            ArticleId = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            TagId = new Guid("c456990c-05db-4965-9334-a295b7f0f993")
                        },
                        new
                        {
                            ArticleId = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            TagId = new Guid("675db0e3-d57d-469b-a07f-09a3ef8a20eb")
                        },
                        new
                        {
                            ArticleId = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            TagId = new Guid("78750f26-d3e7-4ebc-b69a-1c88f44e67ba")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c4ec57b-35b4-4b06-971c-02e4fa316a92"),
                            Name = "默认",
                            Remark = "默认分类！"
                        },
                        new
                        {
                            Id = new Guid("8c5f4aad-83e6-41c9-8e7f-96887257cafb"),
                            Name = "娱乐",
                            Remark = "娱乐新闻"
                        },
                        new
                        {
                            Id = new Guid("9ad93c00-09f4-4f88-8558-0ae3ce19c4c0"),
                            Name = "财经",
                            Remark = "财经新闻"
                        },
                        new
                        {
                            Id = new Guid("42a2bae9-09c2-47ae-94de-3912debff652"),
                            Name = "科技",
                            Remark = "科技新闻"
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e75c9ede-8394-43f6-821d-e06f36024f9e"),
                            ArticleId = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            Content = "加油华为！",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(2330),
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        },
                        new
                        {
                            Id = new Guid("ade40208-cf60-47e8-894a-379777a380a7"),
                            ArticleId = new Guid("5930a2b7-0f93-49e1-a5e9-c764238fb5c1"),
                            Content = "干翻老美！",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(3420),
                            UserId = new Guid("5efc910b-2f45-43df-afae-620d40542853")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Reply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CommentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReceivedId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Replies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("422f5c71-19c8-4729-bbf3-c9a267ca8acc"),
                            CommentId = new Guid("e75c9ede-8394-43f6-821d-e06f36024f9e"),
                            Content = "说得好!",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(5650),
                            ReceivedId = new Guid("5efc910b-2f45-43df-afae-620d40542853"),
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        },
                        new
                        {
                            Id = new Guid("077c8ace-26d5-4699-9cbc-2e0ef7d5021c"),
                            CommentId = new Guid("e75c9ede-8394-43f6-821d-e06f36024f9e"),
                            Content = "说得好!",
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(6070),
                            ReceivedId = new Guid("5efc910b-2f45-43df-afae-620d40542853"),
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Star", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StartId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c456990c-05db-4965-9334-a295b7f0f993"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(750),
                            Name = "华为"
                        },
                        new
                        {
                            Id = new Guid("675db0e3-d57d-469b-a07f-09a3ef8a20eb"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(1150),
                            Name = "国际"
                        },
                        new
                        {
                            Id = new Guid("78750f26-d3e7-4ebc-b69a-1c88f44e67ba"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 570, DateTimeKind.Local).AddTicks(1160),
                            Name = "科技"
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.AuditEntities.ArticleReviewAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AuditStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPass")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReviewRemark")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReviewTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleReviewAudits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b48c02d8-4a57-4b7c-bb78-4d86c4f4f014"),
                            ArticleId = new Guid("11d67370-955b-4976-9285-834721ca57a5"),
                            AuditStatus = true,
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(5690),
                            IsPass = true,
                            ReviewRemark = "文章写的不错，通过了！",
                            ReviewTime = new DateTime(2020, 6, 10, 19, 47, 22, 569, DateTimeKind.Local).AddTicks(6040)
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.AuditEntities.CreatorAutheAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AuditStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPass")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewRemark")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReviewTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreatorAutheAudits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afda3d6d-508a-4552-bf69-026dc22d791d"),
                            AuditStatus = false,
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(5410),
                            IsPass = false,
                            Remark = "身份信息如下：",
                            ReviewTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6091967b-0952-425a-9eda-840b24da5534")
                        },
                        new
                        {
                            Id = new Guid("01883fc0-bc86-4b32-9de9-b2f7c4cb582a"),
                            AuditStatus = false,
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(6910),
                            IsPass = false,
                            Remark = "2身份信息如下：",
                            ReviewTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("6091967b-0952-425a-9eda-840b24da5534")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.RoleEntities.Right", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Rights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe4ebf2e-f1e9-48c8-9a52-d297e865c4a1"),
                            Name = "系统管理"
                        },
                        new
                        {
                            Id = new Guid("8897880e-3ffe-4842-9c22-ff3a212448bc"),
                            Name = "内容创作"
                        },
                        new
                        {
                            Id = new Guid("086de130-5dd4-4542-a459-ce819a9b3a08"),
                            Name = "内容查看"
                        },
                        new
                        {
                            Id = new Guid("875fe2b2-73e1-4c04-873c-daa459220cb7"),
                            Name = "内容审核"
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.RoleEntities.RightRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RightId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId", "RightId");

                    b.HasIndex("RightId");

                    b.ToTable("RightRoles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            RightId = new Guid("fe4ebf2e-f1e9-48c8-9a52-d297e865c4a1"),
                            Id = new Guid("03dd6779-866a-451e-8a31-731df51c90ff")
                        },
                        new
                        {
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            RightId = new Guid("8897880e-3ffe-4842-9c22-ff3a212448bc"),
                            Id = new Guid("2a93d43e-870c-4d34-8e9d-c960c6f6cfe7")
                        },
                        new
                        {
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            RightId = new Guid("086de130-5dd4-4542-a459-ce819a9b3a08"),
                            Id = new Guid("2f964db3-a146-4b01-ac9a-6af2dd1d2e7b")
                        },
                        new
                        {
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            RightId = new Guid("875fe2b2-73e1-4c04-873c-daa459220cb7"),
                            Id = new Guid("994096a9-ba92-40d8-a703-1c4880320e83")
                        },
                        new
                        {
                            RoleId = new Guid("6b42039e-2da4-4d1e-876f-a0ef001537c3"),
                            RightId = new Guid("875fe2b2-73e1-4c04-873c-daa459220cb7"),
                            Id = new Guid("4cdeeb8c-33af-4659-90ca-182fac7eb688")
                        },
                        new
                        {
                            RoleId = new Guid("6b42039e-2da4-4d1e-876f-a0ef001537c3"),
                            RightId = new Guid("086de130-5dd4-4542-a459-ce819a9b3a08"),
                            Id = new Guid("d98f7d65-e06e-44e8-a1a6-2ebd46577601")
                        },
                        new
                        {
                            RoleId = new Guid("b44b39d1-f61d-4e58-94a7-db1603a82c34"),
                            RightId = new Guid("8897880e-3ffe-4842-9c22-ff3a212448bc"),
                            Id = new Guid("695f70bf-99d5-4fff-b76c-c133f8e8f9d8")
                        },
                        new
                        {
                            RoleId = new Guid("b44b39d1-f61d-4e58-94a7-db1603a82c34"),
                            RightId = new Guid("086de130-5dd4-4542-a459-ce819a9b3a08"),
                            Id = new Guid("452cee08-beb0-4bff-b684-13fe97d504ad")
                        },
                        new
                        {
                            RoleId = new Guid("c04383df-5c8e-45c6-9841-9c775ab5af2e"),
                            RightId = new Guid("086de130-5dd4-4542-a459-ce819a9b3a08"),
                            Id = new Guid("5a54e02a-e5ea-493f-a8ed-5600d06918c4")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.RoleEntities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 564, DateTimeKind.Local).AddTicks(9320),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(5460),
                            Name = "管理员"
                        },
                        new
                        {
                            Id = new Guid("6b42039e-2da4-4d1e-876f-a0ef001537c3"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6330),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6340),
                            Name = "内容审查"
                        },
                        new
                        {
                            Id = new Guid("b44b39d1-f61d-4e58-94a7-db1603a82c34"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6360),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6360),
                            Name = "自媒体"
                        },
                        new
                        {
                            Id = new Guid("c04383df-5c8e-45c6-9841-9c775ab5af2e"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6370),
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 567, DateTimeKind.Local).AddTicks(6370),
                            Name = "用户"
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.UserEntities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT")
                        .HasMaxLength(300);

                    b.Property<string>("Introduce")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("States")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbdee09c-089b-4d30-bece-44df5923716c"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "大家好，我是张世纪!",
                            NickName = "张世纪",
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            States = true
                        },
                        new
                        {
                            Id = new Guid("6fb600c1-9011-4fd7-9234-881379716440"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "大家好，我是苑紫清！",
                            NickName = "苑紫清",
                            RoleId = new Guid("b44b39d1-f61d-4e58-94a7-db1603a82c34"),
                            States = true
                        },
                        new
                        {
                            Id = new Guid("5efc910b-2f45-43df-afae-620d40542853"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "大家好，我是张三！",
                            NickName = "张三",
                            RoleId = new Guid("c04383df-5c8e-45c6-9841-9c775ab5af2e"),
                            States = true
                        },
                        new
                        {
                            Id = new Guid("bbdee09c-089b-4d30-bece-44df59237100"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "大家好，我是李四！",
                            NickName = "李四",
                            RoleId = new Guid("b44b39d1-f61d-4e58-94a7-db1603a82c34"),
                            States = true
                        },
                        new
                        {
                            Id = new Guid("6fb600c1-9011-4fd7-9234-881379716400"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "大家好，我是王五！",
                            NickName = "王五",
                            RoleId = new Guid("b6355a7e-4511-45ba-adfb-cc4d026e1f6f"),
                            States = true
                        },
                        new
                        {
                            Id = new Guid("6091967b-0952-425a-9eda-840b24da5534"),
                            Avatar = "https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png",
                            Introduce = "卑微的普通用户",
                            NickName = "卑微的用户",
                            RoleId = new Guid("c04383df-5c8e-45c6-9841-9c775ab5af2e"),
                            States = true
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.UserEntities.UserAuthe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("AuthType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Credential")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Account")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserAuthes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9efa7f1c-a3da-4764-bad9-a88f01f389d6"),
                            Account = "17692463717",
                            AuthType = 1,
                            Credential = "1234567890",
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(3320),
                            RegisterTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(2960),
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        },
                        new
                        {
                            Id = new Guid("a11fe954-7f4d-4229-be77-0c276886ff9c"),
                            Account = "17692463717@qq.com",
                            AuthType = 2,
                            Credential = "1234567890",
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4090),
                            RegisterTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4070),
                            UserId = new Guid("bbdee09c-089b-4d30-bece-44df5923716c")
                        },
                        new
                        {
                            Id = new Guid("a55acec9-593d-4b5a-be27-1d5723411705"),
                            Account = "13300339033",
                            AuthType = 1,
                            Credential = "1234567890",
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4110),
                            RegisterTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4110),
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716440")
                        },
                        new
                        {
                            Id = new Guid("4957355f-d687-40a4-b2b7-5402df1c4cef"),
                            Account = "14302330899",
                            AuthType = 1,
                            Credential = "1234567890",
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4120),
                            RegisterTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4120),
                            UserId = new Guid("5efc910b-2f45-43df-afae-620d40542853")
                        },
                        new
                        {
                            Id = new Guid("54e7051d-8daa-4b1e-bcf3-c7fe35ec0b45"),
                            Account = "13402330890",
                            AuthType = 1,
                            Credential = "1234567890",
                            ModifyTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4130),
                            RegisterTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(4130),
                            UserId = new Guid("6fb600c1-9011-4fd7-9234-881379716400")
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.WebEntities.Banner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Banners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e7b9dfd-7cbf-440e-92cf-2e9566fe4946"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(8290),
                            Picture = "https://www.baidu.com/img/pc_cc75653cd975aea6d4ba1f59b3697455.png",
                            Remark = "百度一下，你就知道",
                            Url = "https://www.baidu.com/"
                        },
                        new
                        {
                            Id = new Guid("a3c2b4a8-48f8-46a7-85db-90c3576bd6ce"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(9020),
                            Picture = "https://www.baidu.com/img/pc_cc75653cd975aea6d4ba1f59b3697455.png",
                            Remark = "百度一下，你就知道",
                            Url = "https://www.baidu.com/"
                        },
                        new
                        {
                            Id = new Guid("94163853-ea93-4281-b9bc-8b5924ef8516"),
                            CreateTime = new DateTime(2020, 6, 10, 19, 47, 22, 568, DateTimeKind.Local).AddTicks(9040),
                            Picture = "https://www.baidu.com/img/pc_cc75653cd975aea6d4ba1f59b3697455.png",
                            Remark = "百度一下，你就知道",
                            Url = "https://www.baidu.com/"
                        });
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Article", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsPublish.Database.Entities.UserEntities.User", "User")
                        .WithMany("Articles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.ArticleTag", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Article", "Article")
                        .WithMany("ArticleTags")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Tag", "Tag")
                        .WithMany("ArticleTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Comment", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsPublish.Database.Entities.UserEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.ArticleEntities.Reply", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Comment", "Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsPublish.Database.Entities.UserEntities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.AuditEntities.ArticleReviewAudit", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.ArticleEntities.Article", "Article")
                        .WithMany("Audits")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.AuditEntities.CreatorAutheAudit", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.UserEntities.User", "User")
                        .WithMany("CreatorAutheAudit")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.RoleEntities.RightRole", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.RoleEntities.Right", "Right")
                        .WithMany("RightRoles")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsPublish.Database.Entities.RoleEntities.Role", "Role")
                        .WithMany("RightRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.UserEntities.User", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.RoleEntities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewsPublish.Database.Entities.UserEntities.UserAuthe", b =>
                {
                    b.HasOne("NewsPublish.Database.Entities.UserEntities.User", "User")
                        .WithMany("UserAuthes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
